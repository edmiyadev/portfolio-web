---
const skills = [
  { category: "Frontend", items: ["HTML/CSS", "JavaScript", "TypeScript", "React", "Vue.js", "Next.js", "Astro", "Tailwind CSS"] },
  { category: "Backend", items: ["Node.js", "Express", "Python", "Django", "PHP", "Laravel", "GraphQL", "REST API"] },
  { category: "Database", items: ["MongoDB", "PostgreSQL", "MySQL", "Redis", "Firebase"] },
  { category: "DevOps", items: ["Git", "Docker", "CI/CD", "AWS", "Vercel", "Netlify"] },
  { category: "Tools", items: ["VS Code", "Figma", "Postman", "Jest", "Webpack", "npm/yarn"] }
];
---

<section id="about" class="py-20 bg-[var(--tw-color-background)]">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 class="text-3xl sm:text-4xl font-bold mb-4">About <span class="text-[var(--tw-color-primary)]">Me</span></h2>
      <p class="text-[var(--tw-color-text)] max-w-2xl mx-auto">Get to know more about me, my background, and what drives me as a developer.</p>
    </div>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
      <div class="about-content opacity-0">
        <h3 class="text-2xl font-bold mb-4 text-[var(--tw-color-secondary)]">My Journey</h3>
        <p class="text-[var(--tw-color-text)] mb-6">
          I'm a passionate fullstack developer with over 6 years of experience building web applications. My journey began with simple HTML and CSS websites, and has evolved to creating complex, scalable applications using modern frameworks and technologies.
        </p>
        <p class="text-[var(--tw-color-text)] mb-6">
          I specialize in creating responsive, user-friendly interfaces with React and building robust backend systems with Node.js. I'm constantly learning and exploring new technologies to stay at the forefront of web development.
        </p>
        <p class="text-[var(--tw-color-text)]">
          When I'm not coding, you can find me hiking in the mountains, reading tech blogs, or experimenting with new programming languages and frameworks.
        </p>
        
        <div class="mt-8">
          <a href="#" class="inline-flex items-center px-6 py-3 bg-[var(--tw-color-primary)] hover:bg-[var(--tw-color-primary-light)] text-[var(--tw-color-secondary)] font-medium rounded-lg transition-colors duration-300 transform hover:scale-105">
            Download Resume
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </a>
        </div>
      </div>
      
      <div class="skills-content opacity-0">
        <h3 class="text-2xl font-bold mb-6 text-[var(--tw-color-secondary)]">Skills & Technologies</h3>
        <div class="space-y-6">
          {skills.map(skillGroup => (
            <div>
              <h4 class="text-lg font-semibold mb-3 text-[var(--tw-color-primary)]">{skillGroup.category}</h4>
              <div class="flex flex-wrap gap-2">
                {skillGroup.items.map(skill => (
                  <span class="px-3 py-1 bg-[var(--tw-color-background)] text-[var(--tw-color-text)] text-sm font-medium rounded-full border border-[var(--tw-color-text)]">{skill}</span>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const aboutContent = document.querySelector('.about-content');
    const skillsContent = document.querySelector('.skills-content');
    
    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('fade-in');
          (entry.target as HTMLElement).style.opacity = '1';
          observer.unobserve(entry.target); // Stop observing once animated
        }
      });
    }, { threshold: 0.1 });
    
    if (aboutContent) observer.observe(aboutContent);
    if (skillsContent) observer.observe(skillsContent);
  });
</script>

